trigger: none
pool: new_agent

parameters:
  - name: run_install
    displayName: "Run Terraform Install?"
    type: boolean
    default: false

  - name: run_init
    displayName: "Run Terraform Init?"
    type: boolean
    default: false

  - name: run_validate
    displayName: "Run Terraform Validate?"
    type: boolean
    default: false

  - name: run_plan
    displayName: "Run Terraform Plan?"
    type: boolean
    default: false

  - name: run_apply
    displayName: "Run Terraform Apply?"
    type: boolean
    default: false

variables:
  path: '$(System.DefaultWorkingDirectory)/Parent_Module'

# -------------------------------
# Stage 1 - Install
# -------------------------------
stages:
- stage: Stage_Install
  displayName: "Terraform Install"
  condition: eq('${{ parameters.run_install }}', true)
  jobs:
  - job: Terraform_Install
    steps:
      - task: TerraformInstaller@1
        displayName: terraform_install
        inputs:
          terraformVersion: 'latest'

# -------------------------------
# Stage 2 - Init
# -------------------------------
- stage: Stage_Init
  displayName: "Terraform Init"
  dependsOn: Stage_Install
  condition: eq('${{ parameters.run_init }}', true)
  jobs:
  - job: Terraform_Init
    steps:
      - task: TerraformTask@5
        displayName: terraform_init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: $(path)
          backendServiceArm: 'oct_WIF'
          backendAzureRmStorageAccountName: 'store10110'
          backendAzureRmContainerName: 'octcont'
          backendAzureRmKey: 'backup.tfstate'

# -------------------------------
# Stage 3 - Validate
# -------------------------------
- stage: Stage_Validate
  displayName: "Terraform Validate"
  dependsOn: Stage_Init
  condition: eq('${{ parameters.run_validate }}', true)
  jobs:
  - job: Terraform_Validate
    steps:
      - task: TerraformTask@5
        displayName: terraform_validate
        inputs:
          provider: 'azurerm'
          command: 'validate'
          workingDirectory: $(path)
          environmentServiceNameAzureRM: 'oct_WIF'

# -------------------------------
# Stage 4 - Plan
# -------------------------------
- stage: Stage_Plan
  displayName: "Terraform Plan"
  dependsOn: Stage_Validate
  condition: eq('${{ parameters.run_plan }}', true)
  jobs:
  - job: Terraform_Plan
    steps:
      - task: TerraformTask@5
        displayName: terraform_plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: $(path)
          environmentServiceNameAzureRM: 'oct_WIF'

# -------------------------------
# Stage 5 - Apply
# -------------------------------
- stage: Stage_Apply
  displayName: "Terraform Apply"
  dependsOn: Stage_Plan
  condition: eq('${{ parameters.run_apply }}', true)
  jobs:
  - job: Terraform_Apply
    steps:
      - task: TerraformTask@5
        displayName: terraform_apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          commandOptions: '--auto-approve'
          workingDirectory: $(path)
          environmentServiceNameAzureRM: 'oct_WIF'
